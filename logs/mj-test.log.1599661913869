INFO  16:31:33,233 - Compiling source file: C:\Users\Pera\eclipse-workspace\MJCompiler\test\program.mj
INFO  16:31:33,257 - #2 program
INFO  16:31:33,257 - #46 MJProgram
INFO  16:31:33,257 - #46 int
INFO  16:31:33,257 - #46 x
INFO  16:31:33,258 - #5 ;
INFO  16:31:33,258 - #46 int
INFO  16:31:33,258 - #46 y
INFO  16:31:33,258 - #5 ;
INFO  16:31:33,258 - #16 const
INFO  16:31:33,258 - #46 char
INFO  16:31:33,258 - #46 pera
INFO  16:31:33,258 - #11 =
INFO  16:31:33,258 - #48 p
INFO  16:31:33,258 - #5 ;
INFO  16:31:33,259 - #15 abstract
INFO  16:31:33,259 - #14 class
INFO  16:31:33,259 - #46 Tim
INFO  16:31:33,259 - #20 extends
INFO  16:31:33,259 - #46 Nesto
INFO  16:31:33,259 - #3 {
INFO  16:31:33,259 - #46 int
INFO  16:31:33,260 - #46 hardver
INFO  16:31:33,260 - #5 ;
INFO  16:31:33,260 - #46 int
INFO  16:31:33,260 - #46 softver
INFO  16:31:33,260 - #5 ;
INFO  16:31:33,260 - #3 {
INFO  16:31:33,260 - #46 int
INFO  16:31:33,260 - #46 pcb
INFO  16:31:33,260 - #6 (
INFO  16:31:33,260 - #7 )
INFO  16:31:33,261 - #3 {
INFO  16:31:33,261 - #46 hardver
INFO  16:31:33,261 - #11 =
INFO  16:31:33,261 - #5 ;
ERROR 16:31:33,261 - 
Sintaksna greska na liniji 11
INFO  16:31:33,261 - #46 softver
INFO  16:31:33,261 - #11 =
INFO  16:31:33,261 - #45 1
ERROR 16:31:33,261 - Sintaksna greska pri dodeli vrednosti u liniji 11
ERROR 16:31:33,262 - Izvrsen oporavak do ;
INFO  16:31:33,262 - #5 ;
INFO  16:31:33,262 - #4 }
INFO  16:31:33,262 - #15 abstract
INFO  16:31:33,263 - #12 void
INFO  16:31:33,263 - #46 fja
INFO  16:31:33,263 - #6 (
INFO  16:31:33,263 - #46 int
INFO  16:31:33,263 - #46 m
INFO  16:31:33,263 - #7 )
INFO  16:31:33,263 - #5 ;
INFO  16:31:33,263 - #4 }
INFO  16:31:33,264 - #4 }
INFO  16:31:33,264 - #3 {
INFO  16:31:33,264 - #46 int
INFO  16:31:33,264 - #46 k
INFO  16:31:33,264 - #6 (
INFO  16:31:33,264 - #7 )
INFO  16:31:33,265 - #46 int
INFO  16:31:33,265 - #46 c
INFO  16:31:33,265 - #5 ;
INFO  16:31:33,265 - #3 {
INFO  16:31:33,265 - #46 c
INFO  16:31:33,265 - #11 =
INFO  16:31:33,265 - #45 1
INFO  16:31:33,265 - #5 ;
INFO  16:31:33,265 - #10 return
INFO  16:31:33,265 - #46 c
INFO  16:31:33,265 - #22 +
INFO  16:31:33,265 - #45 2
INFO  16:31:33,266 - #5 ;
INFO  16:31:33,266 - #4 }
INFO  16:31:33,266 - #46 int
INFO  16:31:33,266 - #46 main
INFO  16:31:33,266 - #6 (
INFO  16:31:33,266 - #7 )
INFO  16:31:33,266 - #3 {
INFO  16:31:33,266 - #46 y
INFO  16:31:33,266 - #11 =
INFO  16:31:33,266 - #45 2
INFO  16:31:33,266 - #5 ;
INFO  16:31:33,266 - #46 x
INFO  16:31:33,266 - #11 =
INFO  16:31:33,266 - #46 y
INFO  16:31:33,266 - #22 +
INFO  16:31:33,266 - #45 2
INFO  16:31:33,266 - #5 ;
INFO  16:31:33,266 - #46 y
INFO  16:31:33,266 - #40 ++
INFO  16:31:33,266 - #5 ;
INFO  16:31:33,266 - #9 print
INFO  16:31:33,267 - #6 (
INFO  16:31:33,267 - #46 y
INFO  16:31:33,267 - #7 )
INFO  16:31:33,267 - #5 ;
INFO  16:31:33,267 - #10 return
INFO  16:31:33,267 - #45 0
INFO  16:31:33,267 - #5 ;
INFO  16:31:33,267 - #4 }
INFO  16:31:33,267 - #4 }
INFO  16:31:33,268 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclListAbstract(
    DeclarationsConst(
      DeclarationsVar(
        DeclarationsVar(
          NoDecl(
          ) [NoDecl]
          VarDecl(
            Type(
             int
            ) [Type]
            VarNameSingle(
              RegVarName(
               x
              ) [RegVarName]
            ) [VarNameSingle]
          ) [VarDecl]
        ) [DeclarationsVar]
        VarDecl(
          Type(
           int
          ) [Type]
          VarNameSingle(
            RegVarName(
             y
            ) [RegVarName]
          ) [VarNameSingle]
        ) [VarDecl]
      ) [DeclarationsVar]
      ConstDecl(
        Type(
         char
        ) [Type]
        ConstInitSingle(
          ConstChar(
           pera
           p
          ) [ConstChar]
        ) [ConstInitSingle]
      ) [ConstDecl]
    ) [DeclarationsConst]
    AbstractClassDecl(
     Tim
      DoesExtend(
        Type(
         Nesto
        ) [Type]
      ) [DoesExtend]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          VarDecl(
            Type(
             int
            ) [Type]
            VarNameSingle(
              RegVarName(
               hardver
              ) [RegVarName]
            ) [VarNameSingle]
          ) [VarDecl]
        ) [VarDeclarations]
        VarDecl(
          Type(
           int
          ) [Type]
          VarNameSingle(
            RegVarName(
             softver
            ) [RegVarName]
          ) [VarNameSingle]
        ) [VarDecl]
      ) [VarDeclarations]
      AbstractClassMethods(
        AnyMethodAbs(
          SingleAnyMethodReg(
            MethodDecl(
              MethodTypeName(
                Type(
                 int
                ) [Type]
               pcb
              ) [MethodTypeName]
              NoFormParam(
              ) [NoFormParam]
              NoVarDecl(
              ) [NoVarDecl]
              Statements(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  ErrorStmt(
                  ) [ErrorStmt]
                ) [Statements]
                DesignatorStmt(
                  DesignatorAssign(
                    VarDesignator(
                     softver
                    ) [VarDesignator]
                    Equals(
                    ) [Equals]
                    TermExpr(
                      FactorTerm(
                        NumFactor(
                         1
                        ) [NumFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                  ) [DesignatorAssign]
                ) [DesignatorStmt]
              ) [Statements]
            ) [MethodDecl]
          ) [SingleAnyMethodReg]
          AbstractMethodDecl(
            AbstractReturnVoid(
            ) [AbstractReturnVoid]
           fja
            FormParams(
              SingleFormalParamDecl(
                FormalParamReg(
                  Type(
                   int
                  ) [Type]
                 m
                ) [FormalParamReg]
              ) [SingleFormalParamDecl]
            ) [FormParams]
          ) [AbstractMethodDecl]
        ) [AnyMethodAbs]
      ) [AbstractClassMethods]
    ) [AbstractClassDecl]
  ) [DeclListAbstract]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        NoFormParam(
        ) [NoFormParam]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          VarDecl(
            Type(
             int
            ) [Type]
            VarNameSingle(
              RegVarName(
               c
              ) [RegVarName]
            ) [VarNameSingle]
          ) [VarDecl]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            DesignatorStmt(
              DesignatorAssign(
                VarDesignator(
                 c
                ) [VarDesignator]
                Equals(
                ) [Equals]
                TermExpr(
                  FactorTerm(
                    NumFactor(
                     1
                    ) [NumFactor]
                  ) [FactorTerm]
                ) [TermExpr]
              ) [DesignatorAssign]
            ) [DesignatorStmt]
          ) [Statements]
          ReturnStmt(
            ReturnExpr(
              AddExpr(
                TermExpr(
                  FactorTerm(
                    VarFactor(
                      VarDesignator(
                       c
                      ) [VarDesignator]
                    ) [VarFactor]
                  ) [FactorTerm]
                ) [TermExpr]
                LeftAddop(
                  AddLeft(
                  ) [AddLeft]
                ) [LeftAddop]
                FactorTerm(
                  NumFactor(
                   2
                  ) [NumFactor]
                ) [FactorTerm]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [ReturnStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesignatorAssign(
                    VarDesignator(
                     y
                    ) [VarDesignator]
                    Equals(
                    ) [Equals]
                    TermExpr(
                      FactorTerm(
                        NumFactor(
                         2
                        ) [NumFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                  ) [DesignatorAssign]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                DesignatorAssign(
                  VarDesignator(
                   x
                  ) [VarDesignator]
                  Equals(
                  ) [Equals]
                  AddExpr(
                    TermExpr(
                      FactorTerm(
                        VarFactor(
                          VarDesignator(
                           y
                          ) [VarDesignator]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                    LeftAddop(
                      AddLeft(
                      ) [AddLeft]
                    ) [LeftAddop]
                    FactorTerm(
                      NumFactor(
                       2
                      ) [NumFactor]
                    ) [FactorTerm]
                  ) [AddExpr]
                ) [DesignatorAssign]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              DesignatorInc(
                VarDesignator(
                 y
                ) [VarDesignator]
              ) [DesignatorInc]
            ) [DesignatorStmt]
          ) [Statements]
          PrintStmt(
            TermExpr(
              FactorTerm(
                VarFactor(
                  VarDesignator(
                   y
                  ) [VarDesignator]
                ) [VarFactor]
              ) [FactorTerm]
            ) [TermExpr]
            NoPrintNum(
            ) [NoPrintNum]
          ) [PrintStmt]
        ) [Statements]
        ReturnStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                NumFactor(
                 0
                ) [NumFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [ReturnStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  16:31:33,268 - ===================================
INFO  16:31:33,270 -  Print count calls = 1
INFO  16:31:33,270 -  Deklarisanih promenljivih ima = 5
INFO  16:31:33,270 -  Definisanih konstanti ima = 1
